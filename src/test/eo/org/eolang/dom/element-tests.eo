# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.dom.element
+alias org.eolang.dom.doc
+architect yegor256@gmail.com
+home https://github.com/h1alexbel/eo-dom
+tests
+package org.eolang.dom
+version 0.0.0
+unlint broken-ref

# This unit test is supposed to check the functionality of the corresponding object.
[] > retrieves-attribute-from-element
  eq. > @
    element
      "<foo f=\"ttt\"/>"
    .get-attribute "f"
    "ttt"

# This unit test is supposed to check the functionality of the corresponding object.
[] > sets-attribute
  eq. > @
    element
      "<foo/>"
    .with-attribute "f" "123"
    .as-string
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo f=\"123\"/>"

# This unit test is supposed to check the functionality of the corresponding object.
[] > sets-text-content
  eq. > @
    element
      "<foo/>"
    .with-text "text is here"
    .as-string
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>text is here</foo>"

# This unit test is supposed to check the functionality of the corresponding object.
[] > builds-element
  eq. > @
    element
      "<book/>"
    .with-attribute "title" "Object Thinking"
    .with-text "The greatest book about OOP"
    .as-string
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><book title=\"Object Thinking\">The greatest book about OOP</book>"

# This unit test is supposed to check the functionality of the corresponding object.
[] > creates-element-with-attribute-and-content
  eq. > @
    doc.create-element
      "book"
    .with-attribute "title" "Code Complete"
    .with-attribute "author" "Steve McConnell"
    .with-text "A Practical Handbook of Software Construction"
    .as-string
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><book author=\"Steve McConnell\" title=\"Code Complete\">A Practical Handbook of Software Construction</book>"

# This unit test is supposed to check the functionality of the corresponding object.
[] > retrieves-text-content
  eq. > @
    element
      "<a>boom</a>"
    .text-content
    "boom"

# This unit test is supposed to check the functionality of the corresponding object.
[] > retrieves-empty-text
  eq. > @
    element
      "<program/>"
    .text-content
    ""
