# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.dom.doc
+alias org.eolang.dom.dom-parser
+architect yegor256@gmail.com
+home https://github.com/h1alexbel/eo-dom
+tests
+package org.eolang.dom
+version 0.0.0
+unlint broken-ref

# This unit test is supposed to check the functionality of the corresponding object.
[] > creates-element
  eq. > @
    dom-parser.parse-from-string
      "<foo/>"
    .create-element "bar"
    .as-string
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><bar/>"

# This unit test is supposed to check the functionality of the corresponding object.
[] > appends-element
  dom-parser.parse-from-string > doc
    "<foo/>"
  eq. > @
    doc.append-child
      doc.create-element
        "bar"
      .with-attribute "f" "x"
      .with-text "boom"
    .as-string
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo><bar f=\"x\">boom</bar></foo>"

# This unit test is supposed to check the functionality of the corresponding object.
[] > retrieves-element-at-index
  dom-parser.parse-from-string > doc
    "<books><book title='Object Thinking'/><book title='Elegant Objects Vol 1.'/></books>"
  doc.get-elements-by-tag-name "book" > books
  books.at 0 > first
  eq. > @
    first.as-string
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><book title=\"Object Thinking\"/>"

# This unit test is supposed to check the functionality of the corresponding object.
[] > retrieves-attribute-from-first-element
  dom-parser.parse-from-string > doc
    "<books><book title='Object Thinking'/><book title='Elegant Objects Vol 1.'/></books>"
  doc.get-elements-by-tag-name "book" > books
  books.at 0 > first
  first.get-attribute "title" > title
  eq. > @
    title
    "Object Thinking"

# This unit test is supposed to check the functionality of the corresponding object.
[] > finds-element-by-id
  dom-parser.parse-from-string > doc
    "<cities><c id='Moscow'/><c id='San Francisco'/><c id='Shanghai'/></cities>"
  eq. > @
    doc.get-element-by-id
      "Moscow"
    .get-attribute "id"
    "Moscow"

# This unit test is supposed to check the functionality of the corresponding object.
[] > retrieves-elements-in-namespace
  dom-parser.parse-from-string > doc
    "<root xmlns:x=\"https://foo.com/ns\"><x:foo>first</x:foo><x:foo>second</x:foo><x:bar>it is bar</x:bar></root>"
  doc.get-elements-by-tag-name-ns "https://foo.com/ns" "foo" > elements
  eq. > @
    elements.length
    2

# This unit test is supposed to check the functionality of the corresponding object.
[] > retrieves-elements-in-wildcard-namespace
  dom-parser.parse-from-string > doc
    "<root xmlns:x=\"https://foo.com/ns\" xmlns:y=\"https://y.com/ns\"><x:f>first</x:f><x:f>second</x:f><y:f>third</y:f></root>"
  doc.get-elements-by-tag-name-ns "*" "f" > elements
  eq. > @
    elements.length
    3
