+spdx SPDX-FileCopyrightText Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT
+architect yegor256@gmail.com
+home https://github.com/h1alexbel/eo-dom
+package org.eolang.dom
+rt jvm org.eolang:eo-runtime:0.0.0
+version 0.0.0
+also string
+unlint rt-without-atoms

# The doc object allows you to create XML tree-based documents. Serves as
# an entry-point into the XML-based document's content.
[] > doc
  # XML.
  [data] > @ ?

  # Serialized XML.
  [serialized] > xml
    [name] > get-elements-by-tag-name ?
    # Retrieves a list of elements with the given tag name belonging to the given namespace.
    # The complete document is searched, including the root node.
    [ns name] > get-elements-by-tag-name-ns ?
    # Returns an element whose id property matches the specified string.
    # Since element IDs are required to be unique if specified, they're a
    # useful way to get access to a specific element quickly.
    [identifier] > get-element-by-id ?
    [] > as-string ?
    # Creates the DOM element specified by `lname`.
    [lname] > create-element ?
    # Appends child to DOM document.
    [child] > append-child ?
    # Evaluate XPath expression.
    # `xpath` - XPath expression.
    # `return` - Return type, possible data types:
    # `string` - Node result with `text()` node inside.
    # `number` - Number result.
    # `boolean` - Boolean result.
    # `node` - Single node result as XML element.
    # `nodeset` - Multiple node results as collection of XML elements.
    [xpath return] > evaluate ?
